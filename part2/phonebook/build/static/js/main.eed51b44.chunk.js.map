{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/SuccNoti.js","components/ErrorNoti.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newObject","post","id","delete","put","Filter","value","onChange","PersonForm","props","onSubmit","newNameVal","onNameChange","newNumVal","onNumChange","type","Person","person","handleClick","name","number","onClick","SuccNoti","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorNoti","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","succMessage","setSuccMessage","errorMessage","setErrorMessage","useEffect","personServices","initialPersons","filteredNames","toUpperCase","includes","event","target","preventDefault","personObject","match","find","window","confirm","changedPerson","map","setTimeout","catch","error","alert","newPerson","concat","response","key","personData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eed51b44.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n    return req.then(res => res.data)\n}\n\nconst create = newObject => {\n    const req = axios.post(baseUrl, newObject)\n    return req.then(res => res.data)\n}\n\nconst remove = id => {\n    axios.delete(`${baseUrl}/${id}`)\n}\n\nconst changeNumber = (id, newObject) => {\n    const req = axios.put(`${baseUrl}/${id}`, newObject)\n    return req.then(res => res.data)\n}\n\nexport default {getAll, create, remove, changeNumber}\n","import React from 'react'\n\nconst Filter = ({value, onChange}) => {\n    return (\n        <div>\n            filter shown with <input value={value} onChange={onChange} />        \n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <div>\n            <form onSubmit={props.onSubmit}>\n                <div>\n                    name: <input value={props.newNameVal} onChange={props.onNameChange} />\n                </div>\n                <div>\n                    number: <input value={props.newNumVal} onChange={props.onNumChange} /> \n                </div>\n                <div>\n                    <button type='submit'>add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonForm\n","import React from 'react'\nconst Person = ({person, handleClick}) => {\n    return (\n        <div>\n            {person.name} {person.number} <button onClick={handleClick}>delete</button>\n        </div>\n    )\n}\n\nexport default Person\n","import React from 'react'\n\nconst SuccNoti = ({message}) => {\n    const styles = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    }\n\n    if (message === null)\n        return null\n    \n    return (\n        <div style={styles}>\n            {message}\n        </div>\n    )\n}\n\nexport default SuccNoti\n","import React from 'react'\n\nconst ErrorNoti = ({message}) => {\n    const styles = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    }\n\n    if (message === null)\n        return null\n    return (\n        <div style={styles}>\n            {message}\n        </div>\n    )\n}\n\nexport default ErrorNoti\n","import React, {useState, useEffect} from 'react'\nimport personServices from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport SuccNoti from './components/SuccNoti'\nimport ErrorNoti from './components/ErrorNoti'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [succMessage, setSuccMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n        personServices\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n\n        const match = persons.find(person => person.name === newName)\n\n        if (!match) {\n            personServices\n                .create(personObject)\n                .then(newPerson => {\n                    setPersons(persons.concat(newPerson))\n                    setSuccMessage(`Added ${newName}`)\n                    setTimeout(() => {\n                        setSuccMessage(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setErrorMessage(error.response.data.error)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n            setNewName('')\n            setNewNumber('')\n        } else if (match.number !== newNumber) {\n            const confirmed = window.confirm(\n                `${newName} is already added to the phonebook, replace the old number with a new on ?`\n            )\n\n            if (confirmed) {\n                personServices\n                    .changeNumber(match.id, personObject)\n                    .then(changedPerson => {\n                        setPersons(persons.map(person => person.id !== match.id ? person : changedPerson))\n                        setSuccMessage(`${newName}'s number has been changed to ${newNumber}`)\n                        setTimeout(() => {\n                            setSuccMessage(null)\n                        }, 5000)\n                    })\n                    .catch(error => {\n                        setErrorMessage(\n                            `Information of ${newName} has already been removed from server`\n                        )\n                        setTimeout(() => {\n                            setErrorMessage(null)\n                        }, 5000)\n                    })\n                setNewName('')\n                setNewNumber('')\n            }\n        } else {\n            setNewName('')\n            setNewNumber('')\n            alert(`${newName} is already added to the phonebook`)\n        }\n    }\n\n    const deletePerson = personData => {\n        const confirm = window.confirm(`Delete ${personData.name}?`)\n        if (confirm) {\n            personServices\n                .remove(personData.id)\n            setSuccMessage(`${personData.name} has been removed from the phonebook`)\n            setTimeout(() => {\n                setSuccMessage(null)\n            }, 5000)\n            setPersons(persons.filter(person => person.id !== personData.id))\n        }\n    }\n\n    const filteredNames = persons.filter(person => person.name.toUpperCase().includes(filter.toUpperCase()))\n\n    const handleNameChange = (event) => setNewName(event.target.value)\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\n    const handleFilter = (event) => setFilter(event.target.value)\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <SuccNoti message={succMessage} />\n            <ErrorNoti message={errorMessage} />\n            <Filter value={filter} onChange={handleFilter} />\n\n            <h2>Add a new</h2>\n            <PersonForm onSubmit={addPerson}\n                newNameVal={newName} onNameChange={handleNameChange}\n                newNumVal={newNumber} onNumChange={handleNumberChange}\n            />\n\n            <h2>Numbers</h2>\n            {filteredNames.map(person => <Person key={person.name} person={person} handleClick={() => deletePerson(person)} />)}\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}